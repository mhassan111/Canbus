// Generated by Dagger (https://dagger.dev).
package com.im.bin.fragments.im;

import com.im.bin.firebase.FirebaseSource;
import com.im.bin.ui.base.BaseFragment_MembersInjector;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatConversationFragment_MembersInjector implements MembersInjector<ChatConversationFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<FirebaseSource> firebaseSourceProvider;

  public ChatConversationFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<FirebaseSource> firebaseSourceProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.firebaseSourceProvider = firebaseSourceProvider;
  }

  public static MembersInjector<ChatConversationFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<FirebaseSource> firebaseSourceProvider) {
    return new ChatConversationFragment_MembersInjector(androidInjectorProvider, firebaseSourceProvider);}

  @Override
  public void injectMembers(ChatConversationFragment instance) {
    BaseFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectFirebaseSource(instance, firebaseSourceProvider.get());
  }

  public static void injectFirebaseSource(ChatConversationFragment instance,
      FirebaseSource firebaseSource) {
    instance.firebaseSource = firebaseSource;
  }
}
