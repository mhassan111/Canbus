// Generated by Dagger (https://dagger.dev).
package com.im.bin.viewModel;

import com.im.bin.respository.UserRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<UserRepository> userRepositoryProvider;

  public LoginViewModel_Factory(Provider<UserRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public LoginViewModel get() {
    LoginViewModel instance = new LoginViewModel();
    LoginViewModel_MembersInjector.injectUserRepository(instance, userRepositoryProvider.get());
    return instance;
  }

  public static LoginViewModel_Factory create(Provider<UserRepository> userRepositoryProvider) {
    return new LoginViewModel_Factory(userRepositoryProvider);
  }

  public static LoginViewModel newInstance() {
    return new LoginViewModel();
  }
}
