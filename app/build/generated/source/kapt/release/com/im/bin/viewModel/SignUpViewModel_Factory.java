// Generated by Dagger (https://dagger.dev).
package com.im.bin.viewModel;

import com.im.bin.respository.UserRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignUpViewModel_Factory implements Factory<SignUpViewModel> {
  private final Provider<UserRepository> userRepositoryProvider;

  public SignUpViewModel_Factory(Provider<UserRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public SignUpViewModel get() {
    SignUpViewModel instance = new SignUpViewModel();
    SignUpViewModel_MembersInjector.injectUserRepository(instance, userRepositoryProvider.get());
    return instance;
  }

  public static SignUpViewModel_Factory create(Provider<UserRepository> userRepositoryProvider) {
    return new SignUpViewModel_Factory(userRepositoryProvider);
  }

  public static SignUpViewModel newInstance() {
    return new SignUpViewModel();
  }
}
