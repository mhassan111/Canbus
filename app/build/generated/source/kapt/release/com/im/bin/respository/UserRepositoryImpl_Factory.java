// Generated by Dagger (https://dagger.dev).
package com.im.bin.respository;

import com.im.bin.firebase.FirebaseSource;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepositoryImpl_Factory implements Factory<UserRepositoryImpl> {
  private final Provider<FirebaseSource> firebaseSourceProvider;

  public UserRepositoryImpl_Factory(Provider<FirebaseSource> firebaseSourceProvider) {
    this.firebaseSourceProvider = firebaseSourceProvider;
  }

  @Override
  public UserRepositoryImpl get() {
    UserRepositoryImpl instance = new UserRepositoryImpl();
    UserRepositoryImpl_MembersInjector.injectFirebaseSource(instance, firebaseSourceProvider.get());
    return instance;
  }

  public static UserRepositoryImpl_Factory create(Provider<FirebaseSource> firebaseSourceProvider) {
    return new UserRepositoryImpl_Factory(firebaseSourceProvider);
  }

  public static UserRepositoryImpl newInstance() {
    return new UserRepositoryImpl();
  }
}
